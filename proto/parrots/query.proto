syntax = "proto3";
package parrots.parrots;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "parrots/params.proto";
import "parrots/models.proto";

// this line is used by starport scaffolding # 1

option go_package = "parrots/x/parrots/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/parrots/parrots/params";
  }
  // Queries a list of Profiles items.
	rpc GetProfiles(QueryGetProfilesRequest) returns (QueryGetProfilesResponse) {
		option (google.api.http).get = "/parrots/parrots/profile";
	}

// Queries a list of ProfileCount items.
	rpc ProfileCount(QueryProfileCountRequest) returns (QueryProfileCountResponse) {
		option (google.api.http).get = "/parrots/parrots/profile_count";
	}

// Queries a list of GetProfile items.
	rpc GetProfile(QueryGetProfileRequest) returns (QueryGetProfileResponse) {
		option (google.api.http).get = "/parrots/parrots/get_profile";
	}

// Queries a list of GetProfileByUsername items.
	rpc GetProfileByUsername(QueryGetProfileByUsernameRequest) returns (QueryGetProfileByUsernameResponse) {
		option (google.api.http).get = "/parrots/parrots/get_profile_by_username";
	}

// Queries a list of GetBeaksCount items.
	rpc GetBeaksCount(QueryGetBeaksCountRequest) returns (QueryGetBeaksCountResponse) {
		option (google.api.http).get = "/parrots/parrots/get_beaks_count";
	}

// Queries a list of GetAllBeaks items.
	rpc GetAllBeaks(QueryGetAllBeaksRequest) returns (QueryGetAllBeaksResponse) {
		option (google.api.http).get = "/parrots/parrots/get_all_beaks";
	}

// Queries a list of GetBeakById items.
	rpc GetBeakById(QueryGetBeakByIdRequest) returns (QueryGetBeakByIdResponse) {
		option (google.api.http).get = "/parrots/parrots/get_beak_by_id";
	}

// Queries a list of GetBeaksByNameSubstring items.
	rpc GetBeaksByNameSubstring(QueryGetBeaksByNameSubstringRequest) returns (QueryGetBeaksByNameSubstringResponse) {
		option (google.api.http).get = "/parrots/parrots/get_beaks_by_name_substring";
	}

// Queries a list of GetBeaksByTag items.
	rpc GetBeaksByTag(QueryGetBeaksByTagRequest) returns (QueryGetBeaksByTagResponse) {
		option (google.api.http).get = "/parrots/parrots/get_beaks_by_tag";
	}

// Queries a list of GetRespectedBeaks items.
	rpc GetRespectedBeaks(QueryGetRespectedBeaksRequest) returns (QueryGetRespectedBeaksResponse) {
		option (google.api.http).get = "/parrots/parrots/get_respected_beaks";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetProfilesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryGetProfilesResponse {
  repeated Profile Profile = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryProfileCountRequest {
}

message QueryProfileCountResponse {
  uint64 count = 1;
}

message QueryGetProfileRequest {
  uint64 id = 1;
}

message QueryGetProfileResponse {
  Profile profile = 1;
}

message QueryGetProfileByUsernameRequest {
  string username = 1;
}

message QueryGetProfileByUsernameResponse {
  Profile profile = 1;
}

message QueryGetBeaksCountRequest {
}

message QueryGetBeaksCountResponse {
  uint64 count = 1;
}

message QueryGetAllBeaksRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryGetAllBeaksResponse {
  repeated Beak beaks = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetBeakByIdRequest {
	uint64 id = 1;
}

message QueryGetBeakByIdResponse {
  Beak beak = 1;
}

message QueryGetBeaksByNameSubstringRequest {
	string nameSubstring = 1;
	cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryGetBeaksByNameSubstringResponse {
  repeated Beak beaks = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetBeaksByTagRequest {
	string tag = 1;
	cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QueryGetBeaksByTagResponse {
	repeated Beak beaks = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetRespectedBeaksRequest {
	uint64 id = 1;
}

message QueryGetRespectedBeaksResponse {
  repeated Beak beaks = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
